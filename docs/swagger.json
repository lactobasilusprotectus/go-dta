{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for DTS project",
        "title": "API Documentation for DTS project",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Check Server is alive.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "Check if server is alive",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg_root_delivery.RootHandler"
                        }
                    }
                }
            }
        },
        "/comment": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "FindAllComment get all comment  from database.",
                "tags": [
                    "Comment"
                ],
                "summary": "FindAllComment  all comment  from database.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "InsertComment insert comment to database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "InsertComment insert comment to database.",
                "parameters": [
                    {
                        "description": "Commennt Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_comment_delivery.reqInsert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        },
        "/comment/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "FindCommentByID get comment by ID from database.",
                "tags": [
                    "Comment"
                ],
                "summary": "FindCommentByID get comment by ID from database.",
                "operationId": "get-string-by-int",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "UpdateComment update comment.",
                "tags": [
                    "Comment"
                ],
                "summary": "UpdateComment update comment.",
                "operationId": "get-string-by-int",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_comment_delivery.reqUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "DeleteComment delete comment.",
                "tags": [
                    "Comment"
                ],
                "summary": "DeleteComment delete comment.",
                "operationId": "get-string-by-int",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login user to get token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user to get token.",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_auth_common.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        },
        "/photo": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "FindAllPhoto get all photo from database.",
                "tags": [
                    "Photo"
                ],
                "summary": "FindAllPhoto get all photo from database.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "InsertPhoto insert photo to database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "InsertPhoto insert photo to database.",
                "parameters": [
                    {
                        "description": "Photo Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_photo_delivery.reqInsert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        },
        "/photo/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "FindPhotoByID get photo by ID from database.",
                "tags": [
                    "Photo"
                ],
                "summary": "FindPhotoByID get photo by ID from database.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "UpdatePhoto update photo by ID.",
                "tags": [
                    "Photo"
                ],
                "summary": "UpdatePhoto update photo by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Photo Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_photo_delivery.reqUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "DeletePhoto delete photo by ID.",
                "tags": [
                    "Photo"
                ],
                "summary": "DeletePhoto delete photo by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Regis user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Regis user.",
                "parameters": [
                    {
                        "description": "Registration Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_auth_common.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        },
        "/socialmedia": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "FindAllSocialMedia get all SocialMedia from database.",
                "tags": [
                    "SocialMedia"
                ],
                "summary": "FindAllSocialMedia get all SocialMedia from database.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "InsertSocialMedia insert socialMedia to database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SocialMedia"
                ],
                "summary": "InsertSocialMedia insert socialMedia to database.",
                "parameters": [
                    {
                        "description": "SocialMedia Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_socialmedia_delivery.reqInsert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        },
        "/socialmedia/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "FindSocialMediaByID get SocialMedia by ID from database.",
                "tags": [
                    "SocialMedia"
                ],
                "summary": "FindSocialMediaByID get SocialMedia by ID from database.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "UpdateSocialMedia update SocialMedia by ID.",
                "tags": [
                    "SocialMedia"
                ],
                "summary": "UpdateSocialMedia update SocialMedia by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "socialmedia Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_socialmedia_delivery.reqUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "DeleteSocialMedia SocialMedia photo by ID.",
                "tags": [
                    "SocialMedia"
                ],
                "summary": "DeleteSocialMedia SocialMedia photo by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-dts_pkg_util_http.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "go-dts_pkg_auth_common.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "go-dts_pkg_auth_common.RegisterRequest": {
            "type": "object",
            "required": [
                "age",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "go-dts_pkg_util_http.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error_message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pkg_comment_delivery.reqInsert": {
            "type": "object",
            "required": [
                "message",
                "photo_id"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "photo_id": {
                    "type": "integer"
                }
            }
        },
        "pkg_comment_delivery.reqUpdate": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "photo_id": {
                    "type": "integer"
                }
            }
        },
        "pkg_photo_delivery.reqInsert": {
            "type": "object",
            "required": [
                "photo_url",
                "title"
            ],
            "properties": {
                "caption": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pkg_photo_delivery.reqUpdate": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pkg_root_delivery.RootHandler": {
            "type": "object",
            "properties": {
                "build_timestamp": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "pkg_socialmedia_delivery.reqInsert": {
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "pkg_socialmedia_delivery.reqUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}